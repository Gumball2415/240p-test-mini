;
; Audio sync test for 240p test suite
; Copyright 2018 Damian Yerrick
;
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 2 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License along
; with this program; if not, write to the Free Software Foundation, Inc.,
; 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
;
include "src/gb.inc"
include "src/global.inc"

  rsset hTestState
def hProgress rb 1
def hRunning rb 1

  rsset hLocals
def hCeilingTile0 rb 1
def hCeilingTile1 rb 1
def hCeilingTile2 rb 1
def hCeilingTile3 rb 1

section "audiosync",ROM0

def CEILING_Y equ 32
def CEILING_HT equ 16
def FLOOR_Y equ 120
def RISEFALL_FRAMES equ 120
def BEEP_FRAMES equ 2
def FLOOR_TILE equ $03
def DOT_TILE equ $01
def PULSE_1K equ 2048-131

; Inline functions called once

macro audiosync_draw_sprite
  ld hl,SOAM
  ldh a,[hProgress]
  cp RISEFALL_FRAMES / 2
  jr nc,.is_descending
    cpl
    add RISEFALL_FRAMES + 1
  .is_descending:
  add 16 + FLOOR_Y - RISEFALL_FRAMES
  ld [hl+],a
  ld a,79+8
  ld [hl+],a
  ld a,DOT_TILE
  ld [hl+],a
  xor a
  ld [hl+],a

  ld a,l
  ld [oam_used],a
  call lcd_clear_oam
endm

macro audiosync_draw_row
  ldh a,[hProgress]
  ld b,a
  cp 40
  sbc a
  cpl
  add 4
  ld hl, hCeilingTile0
  ld [hl+], a
  ld a,b
  cp 60
  sbc a
  cpl
  add 4
  ld [hl+], a
  ld a,b
  cp 80
  sbc a
  cpl
  add 4
  ld [hl+], a
  ld a,b
  cp 100
  sbc a
  cpl
  add 4
  ld [hl+], a

  ld b,CEILING_HT / 8
  ldxy hl, 0, CEILING_Y / 8
  ld de,12
.rowloop:
  ldh a,[hCeilingTile0]
  ld [hl+],a
  ld [hl+],a
  ldh a,[hCeilingTile1]
  ld [hl+],a
  ld [hl+],a
  ldh a,[hCeilingTile2]
  ld [hl+],a
  ld [hl+],a
  ldh a,[hCeilingTile3]
  ld [hl+],a
  ld [hl+],a
  inc l
  inc l
  inc l
  inc l
;  ldh a,[hCeilingTile3]
  ld [hl+],a
  ld [hl+],a
  ldh a,[hCeilingTile2]
  ld [hl+],a
  ld [hl+],a
  ldh a,[hCeilingTile1]
  ld [hl+],a
  ld [hl+],a
  ldh a,[hCeilingTile0]
  ld [hl+],a
  ld [hl+],a
  add hl,de
  dec b
  jr nz,.rowloop
endm

activity_audiosync::
.restart:
  call clear_gbc_attr
  ldh [hRunning],a
  ldh [hProgress],a

  ; Load tiles
  call load_backlight_chr

  ; Load map
  ld h,4
  call clear_scrn0_to_h
  ldxy hl, 0, FLOOR_Y / 8
  ld a,FLOOR_TILE
  ld c,20
  rst memset_tiny

  call init_apu
  ld a,$80
  ldh [rNR11],a  ; Duty 50%
  call sgb_set_palette_gray

  ; Turn on rendering
  ld a,LCDCF_ON|BG_NT0|BG_CHR01|OBJ_ON
  ldh [vblank_lcdc_value],a
  ldh [rLCDC],a

.loop:
  ld b,helpsect_audio_sync
  call read_pad_help_check
  jr nz,.restart

  ldh a,[new_keys]
  ld b,a
  bit PADB_B,b
  ret nz

  ; A: Toggle pause, and start over if paused
  bit PADB_A,b
  jr z,.not_toggle_pause
    ldh a,[hRunning]
    xor $01  ; CPL doesn't set Z
    ldh [hRunning],a
    jr nz,.startover
  .not_toggle_pause:

  ldh a,[hProgress]
  cp RISEFALL_FRAMES + BEEP_FRAMES
  jr c,.notstartover
  .startover:
    xor a
    ldh [hProgress],a

    ; End beep
    ldh [rNR12],a  ; volume and decay
    ld a,$80
    ldh [rNR14],a  ; freq hi and note start
  .notstartover:
  cp RISEFALL_FRAMES
  jr nz,.no_start_beep

    ; Start beep
    ld a,$F0
    ldh [rNR12],a  ; volume and decay
    ld a,low(PULSE_1K)
    ldh [rNR13],a  ; freq lo
    ld a,high(PULSE_1K) | $80
    ldh [rNR14],a  ; freq hi and note start
    scf
  .no_start_beep:
  jr nc,.clock_despite_pause
  ldh a,[hRunning]
  or a
  jr z,.skip_clocking
  .clock_despite_pause:
    ldh a,[hProgress]
    inc a
    ldh [hProgress],a
  .skip_clocking:
  
  audiosync_draw_sprite
  rst wait_vblank_run_dma
  audiosync_draw_row

  ldh a,[hProgress]
  cp RISEFALL_FRAMES
  sbc a  ; A=$00 during beep or $FF during test
  and %00000011
  call set_bgp
  call set_obp0

  jp .loop



