include "src/gb.inc"
include "src/global.inc"

section "sgbcolors", ROM0
sgb_master_palette:
  ; 0: Grays
  drgb $F8F8F8
  drgb $A8A8A8
  drgb $585858
  drgb $000000

  ; 1: Help
  drgb $F8D0A8
  drgb $A88848
  drgb $884820
  drgb $001050

  ; 2: Grid
  drgb $F8F8F8
  drgb $FF0000
  drgb $FF0000
  drgb $000000

  ; 3: Sharpness bricks
  drgb $F8F8F8
sharpness_bricks_gbc_palette::
  drgb $606040
  drgb $402020
  drgb $200000

  ; 4-7: Color bleed, one for each row
color_bleed_palette::
  drgb $000000
  drgb $FF0000
  drgb $000000
  drgb $000000
  drgb $000000
  drgb $00FF00
  drgb $000000
  drgb $000000
  drgb $000000
  drgb $0000FF
  drgb $000000
  drgb $000000
  drgb $000000
  drgb $FFFFFF
  drgb $000000
  drgb $000000
color_bleed_palette_end::

  ; 8-11: 12-step gray ramp
  drgb $000000
  drgb $101010
  drgb $282828
  drgb $383838
  drgb $000000
  drgb $505050
  drgb $686868
  drgb $787878
  drgb $000000
  drgb $909090
  drgb $a8a8a8
  drgb $b8b8b8
  drgb $000000
  drgb $d0d0d0
  drgb $e8e8e8
  drgb $f8f8f8

  ; 12-13: Color bars on gray (75%)
  drgb $B80000
  drgb $B800B8
  drgb $B8B800
  drgb $B8B8B8
  drgb $B80000
  drgb $00B8B8
  drgb $00B800
  drgb $0000B8

  ; 14-15: Color bars on gray (100%)
  drgb $F80000
  drgb $F800F8
  drgb $F8F800
  drgb $F8F8F8
  drgb $F80000
  drgb $00F8F8
  drgb $00F800
  drgb $0000F8

  ; 16-18: Lame boy
lameboybgpalette_gbc::
  drgb $8fa1ff  ; 0: Sky and floor
  drgb $342800
  drgb $366d00
  drgb $55c753
  drgb $8fa1ff  ; 1: Push blocks
  drgb $6D5C00
  drgb $BDAC2C
  drgb $E4DCA8
lameboyobjpalette_gbc::
  drgb $8fa1ff  ; 2: Obj
  drgb $342800
  drgb $BD3C30
  drgb $FFCFCA
lameboyobjpalette_gbc_end::

  ; 19: Vertical scroll
  drgb $FFFFAA
  drgb $FFAA55
  drgb $AA5500
  drgb $550000

  ; 20-21: Color bars on gray dark
cbog_palette_dark::
  drgb $10C010  ; Green to white
  drgb $10C0C0
  drgb $C0C010
  drgb $C0C0C0
  drgb $10C010  ; Green to blue
  drgb $C010C0
  drgb $C01010
  drgb $1010C0

  ; 22-23: Color bars on gray light
cbog_palette_light::
  drgb $10FF10  ; Green to white
  drgb $10FFFF
  drgb $FFFF10
  drgb $FFFFFF
  drgb $10FF10  ; Green to blue
  drgb $FF10FF
  drgb $FF1010
  drgb $1010FF

  ; 24-27: PLUGE test
pluge_palette_common::
  drgb $686868
  drgb $989898
  drgb $c8c8c8
  drgb $f8f8f8
  drgb $686868
  drgb $686868
  drgb $c8c8c8
  drgb $f8f8f8

pluge_palette_ntsc::
  drgb $101010  ; NTSC version
  drgb $181818
  drgb $080808
  drgb $080808

  drgb $000000  ; NTSC-J version
  drgb $080808
  drgb $080008
  drgb $000800

  ; 28-32: PLUGE Contrast test
pluge_shark_palette::
  drgb $000000
  drgb $A8A8A8
  drgb $102080
  drgb $007080

  drgb $000000
  drgb $202020
  drgb $101010
  drgb $202020

  drgb $000000
  drgb $101010
  drgb $080808
  drgb $101010

  drgb $D8D8D8
  drgb $F8F8F8
  drgb $E8E8E8
  drgb $F8F8F8

  drgb $E8E8F8
  drgb $F8F8F8
  drgb $F0F0F0
  drgb $F8F8F8

  ; 33-36: Hill zone scroll test
  ; 33: Sky and water (dark brown, medium brown, sky blue, white)
  drgb $503000
  drgb $705000
  drgb $8FA1FF
  drgb $FFFFFF
  ; 34: Far foliage (dark brown, medium green, light green, white)
  drgb $402000
  drgb $60A000
  drgb $A0E020
  drgb $FFFFFF
  ; 35: Top of grass (dark brown, medium green, light green, sky blue)
  drgb $402000
  drgb $60A000
  drgb $A0E020
  drgb $8FA1FF
  ; 36: Bottom of grass (dark brown, dark green, medium green, light green)
  drgb $402000
  drgb $406000
  drgb $60A000
  drgb $A0E020

  ; 37: Stopwatch frames
  drgb $F8F8F8
  drgb $A8A8E0
  drgb $FF0000
  drgb $0000C8


sgb_master_palette_end:

sgb_cmd_freeze:
  db $17*8+1
  db $01  ; Freeze current screen
  rept 14
    db $00
  endr

sgb_cmd_load_master_palette:
  db $0B*8+1
  rept 15
    db $00
  endr

; An activity that uses PAL01 instead of PAL_SET may need to
; clear attributes first
sgb_cmd_clear_attrs::
  db $04*8+1  ; 1 packet holds up to 2 rectangles
  db 1        ; number of rectangles

  db %00000111  ; bit 0: inside, 1: border, 2: outside
  db %00000000  ; inside and border to palette 0, outside to palette 0
  db 0, 0, 19, 17

  db 0, 0, 0, 0, 0, 0, 0, 0

;;
; Turns off the LCD, sets scroll to 0, sets BGP to identity ($E4),
; and sets up the _SCRN0 tilemap for Super Game Boy *_TRN commands.
sgb_load_trn_tilemap:
  call lcd_off
  ld a, %11100100
  ldh [rBGP], a
  call clear_scrn0_to_0
  ld hl, _SCRN0+640
  push hl
  xor a
  ld c, a
  ldh [rSCX], a
  ldh [rSCY], a
  call memset_inc
  pop hl
  ld de, _SCRN0
  jp load_full_nam

sgb_load_master_palette::
  ; Freeze display while doing transfers
  ld hl, sgb_cmd_freeze
  call sgb_send
  
  ; Load master palette into CHRRAM0
  call sgb_load_trn_tilemap
  ld hl, sgb_master_palette
  ld de, CHRRAM0
  ld bc, sgb_master_palette_end - sgb_master_palette
  call memcpy

  ; Do the transfer
  ld a, LCDCF_ON|LCDCF_BGON|LCDCF_BG8000|LCDCF_BG9800
  ldh [rLCDC], a
  ld hl, sgb_cmd_load_master_palette
  call sgb_send

  ; Turn LCD back off, unfreeze, and load help palette
  call lcd_off
  ld b, 1
  jr sgb_set_palette_b

sgb_set_palette_gray::
  ld b, 0
  ; fall through
sgb_set_palette_b::
  ld c, b
  ld d, b
  ld e, b
  ; fall through

;;
; Sets Super Game Boy palettes and unfreezes the display.
; Does nothing on non-SGB.
; @param B index into last PAL_TRN for subpalette 0
; @param C index into last PAL_TRN for subpalette 1
; @param D index into last PAL_TRN for subpalette 2
; @param E index into last PAL_TRN for subpalette 3
sgb_set_palettes_bcde::
  ldh a, [hw_capability]
  rra
  ret nc
  ld a, $40
  ; fall through

;;
; Sets Super Game Boy palettes defined through PAL_TRN
; and optionally loads an attribute table defined through ATTR_TRN.
; @param B index into last PAL_TRN for subpalette 0
; @param C index into last PAL_TRN for subpalette 1
; @param D index into last PAL_TRN for subpalette 2
; @param E index into last PAL_TRN for subpalette 3
; @param A bit 7: load attribute table whose index is in bits 0-5;
;   bit 6: unfreeze display
sgb_set_palettes_bcde_attr_a::
  ld hl, help_line_buffer
  push hl
  push af
  push bc

  ; Clear unused bytes of packet
  push hl
  xor a
  ld c, 16
  call memset_tiny
  pop hl

  ; Populate packet
  ld a, $0A*8+1  ; PAL_SET
  ld [hl+], a
  pop bc
  ld a, b
  ld [hl+], a
  inc hl
  ld a, c
  ld [hl+], a
  inc hl
  ld a, d
  ld [hl+], a
  inc hl
  ld a, e
  ld [hl+], a
  inc hl
  pop af  ; A = unfreeze and predefuattribute table command
  ld [hl+], a

  ; And send it to the SGB
  pop hl
  jp sgb_send
